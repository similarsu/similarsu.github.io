{"pages":[],"posts":[{"title":"win8文件夹或文件被占用","text":"背景1删除文件时,出现如下状况，如何决解？ 打开任务管理器 打开资源监视器 搜索文件名并删除","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/windows/win8%E6%96%87%E4%BB%B6%E5%A4%B9%E6%88%96%E6%96%87%E4%BB%B6%E8%A2%AB%E5%8D%A0%E7%94%A8/"},{"title":"jekyll如何在本地搭建测试环境——第一讲","text":"注册github账号安装ruby下载railsinstaller(密码：3gmg）安装railsinstaller 配置SSH生成SSH 登陆github网站，并添加SSH 安装jekyll打开命令行窗口 测试一下git是否连接正常1ssh -T git@github.com 防止出错12set LC_ALL=en_US.UTF-8set LANG=en_US.UTF-8 稍微对配置做一下修改，把淘宝的镜像加到gem的镜像列表里12gem sources --remove http://rubygems.org/gem sources -a http://ruby.taobao.org/ 查看1gem sources -l 安装jekyll1gem install jekyll 是否安装成功jekyll1jekyll -v 安装rdiscount kramdown1gem install rdiscount kramdown 新建jekyll项目1jekyll new blog 进入并运行jekyll项目12cd blogjekyll serve 打开浏览器，输入http://127.0.0.1:4000","link":"/%E5%8D%9A%E5%AE%A2/jekyll/jekyll%E5%A6%82%E4%BD%95%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%80%E8%AE%B2/"},{"title":"jekyll使用现有模板——第二讲","text":"打开命令行窗口 使用现有的jekyll模版1git clone git@github.com:sutong/sutong.github.io.git sutong.github.io 进入目录1cd sutong.github.io 删除.git文件1rm -rf .git 初始化git1git init 添加文件到版本控制1git add -A 提交到本地库1git commit -m &quot;init the git&quot; 添加中央仓库地址1git remote add origin git@github.com:sutong/sutong.github.io.git","link":"/%E5%8D%9A%E5%AE%A2/jekyll/jekyll%E4%BD%BF%E7%94%A8%E7%8E%B0%E6%9C%89%E6%A8%A1%E6%9D%BF%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%8C%E8%AE%B2/"},{"title":"sqlplus远程访问数据库","text":"背景1不配置本地net服务名，sqlplus如何访问远程数据库？ 1conn username/password@ip[:port]/sid [as sysdba]","link":"/%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/sqlplus%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"title":"忘记sys密码","text":"背景1不小心忘记了数据库sys的密码怎么办？ 登陆数据库服务器123sqlplus /nologconn / as sysdba;alter user sys identified by newpassword;","link":"/%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/%E5%BF%98%E8%AE%B0sys%E5%AF%86%E7%A0%81/"},{"title":"oracle表迁移","text":"背景1将USERS表空间下QUERY用户下的所有表迁移到DATA01表空间 修改用户默认表空间1alter user QUERY default tablespace DATA01; 迁移表到新的表空间SQL执行语句1select 'alter table '||v.owner||'.'|| v.table_name ||' move tablespace DATA01;' from dba_tables v where v.tablespace_name='USERS' and v.owner='QUERY'; 创建索引重建的SQL执行语句1select 'alter index '||w.owner||'.'|| w.index_name ||' rebuild tablespace DATA01;' from dba_indexes w where w.owner='QUERY';","link":"/%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/oracle%E8%A1%A8%E8%BF%81%E7%A7%BB/"},{"title":"如何修改powerdesigner外键的生成规则","text":"打开Database&gt;&gt;Edit Current DBMS 进入Script&gt;&gt;Objects&gt;&gt;Reference&gt;&gt;ConstName,修改规则","link":"/%E6%95%B0%E6%8D%AE%E5%BA%93/powerdesigner/%E4%BF%AE%E6%94%B9%E5%A4%96%E9%94%AE%E7%9A%84%E7%94%9F%E6%88%90%E8%A7%84%E5%88%99/"},{"title":"如何去除powerdesigner生成的sql文件中的引号?","text":"打开Database&gt;&gt;Edit Current DBMS 进入Script&gt;&gt;Sql&gt;&gt;Format&gt;&gt;CaseSensitivityUsingQuote,选择NO","link":"/%E6%95%B0%E6%8D%AE%E5%BA%93/powerdesigner/%E5%8E%BB%E9%99%A4%E7%94%9F%E6%88%90sql%E8%AF%AD%E5%8F%A5%E4%B8%AD%E7%9A%84%E5%BC%95%E5%8F%B7/"},{"title":"svn限制必须填写log message才能提交更新(window)","text":"在svn服务端的仓库的hook目录下添加pre-commit.bat文件，内容如下12345678910111213@echo offsetlocalset REPOS=%1set REV=%2set svnlook=&quot;D:\\Program Files\\VisualSVN Server\\bin\\svnlook.exe&quot;(改为自己的目录)rem check that logmessage contains at least 10 characters%svnlook% log &quot;%REPOS%&quot; -t &quot;%REV%&quot; | findstr &quot;..........&quot; &gt; nulif %errorlevel% gtr 0 goto errecho 提交的log信息要大于10个字符，请重新提交！1&gt;&amp;2exit 0:errecho 提交被阻止，请填写关于此次修改的log信息（需大于10个字符），然后再重新提交! 1&gt;&amp;2exit 1","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/svn/svn%E9%99%90%E5%88%B6%E5%BF%85%E9%A1%BB%E5%A1%AB%E5%86%99log-message%E6%89%8D%E8%83%BD%E6%8F%90%E4%BA%A4%E6%9B%B4%E6%96%B0-window/"},{"title":"tomcat报PermGen space错误，如何解决(window)","text":"修改TOMCAT_HOME/bin/catalina.bat，在“echo “Using CATALINA_BASE: $CATALINA_BASE””上面加入以下行 1@set JAVA_OPTS=%JAVA_OPTS% -server -XX:PermSize=128M -XX:MaxPermSize=512M","link":"/%E6%9C%8D%E5%8A%A1%E5%99%A8/tomcat/tomcat%E6%8A%A5PermGen-space%E9%94%99%E8%AF%AF%EF%BC%8C%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3-window/"},{"title":"hudson Home目录修改","text":"修改Hudson安装目录下/WEB-INF/web.xml，找到HUDSON_HOME，修改内容如下 同时将C:\\Users\\用户.hudson文件移动到该处","link":"/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/hudson/hudson-Home%E7%9B%AE%E5%BD%95%E4%BF%AE%E6%94%B9/"},{"title":"eclipse maven项目出现Enabling Maven Dependency Management错误","text":"背景1eclipse maven项目出现如下错误，怎么办？ 右键选中你的项目，maven&lt;&lt;disable maven naurecmd 在doc界面进入到你的项目目录，执行如下代码1mvn eclipse:clean 再次进去到eclipse中，右键选中你的项目，Configure &lt;&lt; Convert into Maven Projec","link":"/IDE/eclipse/eclipse-maven%E9%A1%B9%E7%9B%AE%E5%87%BA%E7%8E%B0Enabling-Maven-Dependency-Management%E9%94%99%E8%AF%AF/"},{"title":"ie8变为ie6","text":"1进入如下目录C:\\WINDOWS\\ie8\\spuninst，执行spuninst.exe","link":"/%E6%B5%8F%E8%A7%88%E5%99%A8/ie/ie8%E5%8F%98%E4%B8%BAie6/"},{"title":"mysql创建数据库及用户","text":"登陆数据库创建数据库phone1create database phone; 创建用户phone1create user phone identified by '123456'; 授予用户phone在数据库phone下的权限1grant all on phone.* to phone;","link":"/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%8A%E7%94%A8%E6%88%B7/"},{"title":"vmware中linux与window文件共享","text":"安装vmware tools 拷贝VMwareTools-9.9.0-2304977.tar.gz到/tmp12mount /dev/cdrom /mntcp /mnt/VMwareTools-9.9.0-2304977.tar.gz /tmp 安装vmware tools123tar -zxvf VMwareTools-9.9.0-2304977.tar.gzcd /tmp/vmware-tools-distrib./vmware-install.pl 重启系统1reboot 重新安装vmware tools12cd /usr/bin./vmware-config-tools.pl 共享文件 访问共享文件1cd /mnt/hgfs","link":"/%E8%99%9A%E6%8B%9F%E6%9C%BA/vmware/vmware%E4%B8%ADlinux%E4%B8%8Ewindow%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/"},{"title":"linux中安装nodejs","text":"下载nodejs(密码：fre8）放在共享文件Install中拷贝node-v0.10.36-linux-x86.tar.gz到/tmp1cp /mnt/hgfs/Install/node-v0.10.36-linux-x86.tar.gz /tmp 解压文件，并放置到/opt目录下12tar -zxvf node-v0.10.36-linux-x86.tar.gzmv /tmp/node-v0.10.36-linux-x86 /opt 配置环境变量（对全部用户有效）123456vi /etc/profile#加入如下信息NODEJS_HOME=/opt/node-v0.10.36-linux-x86export NODEJS_HOMEPATH=$PATH:$NODEJS_HOME/binexport PATH 不用重启，使环境变量起效1source /etc/profile 安装是否成功1node -v","link":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/nodejs/linux%E4%B8%AD%E5%AE%89%E8%A3%85nodejs/"},{"title":"linux中安装gcc","text":"挂载系统安装文件1mount /dev/cdrom /mnt 进入SERVER1cd /mnt/Server/ 查找gcc1rpm -ivh gcc* 安装依赖1234rpm -ivh kernel-headers-2.6.18-194.el5.i386.rpmrpm -ivh glibc-headers-2.5-49.i386.rpmrpm -ivh glibc-devel-2.5-49.i386.rpmrpm -ivh libgomp-4.4.0-6.el5.i386.rpm 安装1rpm -ivh gcc-4.1.2-48.el5.i386.rpm 查看是否安装成功1gcc -v","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E4%B8%AD%E5%AE%89%E8%A3%85gcc/"},{"title":"TortoiseGit如何通过ssh连接github","text":"打开PuTTYgen。 点击Generate,生成密钥对(可以点击其他位置，加快生成速度)。 拷贝公钥。 进入github,将上面的公钥加入ssh中。点击保存私钥，my.ppk文件。 在tortoisegit中配置ssh。 若在第3步忘记拷贝公钥，可以打开PuTTYgen，加载第5步保存的ppk文件，重复3~6步骤即可。","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/TortoiseGit%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87ssh%E8%BF%9E%E6%8E%A5github/"},{"title":"javascript如何定义函数","text":"javascript函数是一种特殊的对象。函数在内存中是以键值对的形式存储的。 函数的定义方式有如下三种。第一种方式123function fn1(){ alert(&quot;fn1&quot;); } 第二种方式123var fn2=function(){ alert(&quot;fn2&quot;);} 第三种方式(不常见)12var fn3=new Function(&quot;num1&quot;,&quot;num2&quot;,&quot;alert(num1+num2)&quot;);fn3(1,2); 源码下载:function_define.txt","link":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/javascript/javascript%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/"},{"title":"javascript函数传递","text":"由于函数是对象，所以可以通过参数传递进来。1234567891011121314function callFun(fun,arg){ return fun(arg);}function say(str){ alert(&quot;hello &quot;+str);}function sum(num){ return num+100;}callFun(say,&quot;John&quot;);alert(callFun(sum,10)); 函数作为返回值返回123456789function fn1(arg){ var rel=function(num){ return arg+num; } return rel;}//返回函数对象var f=fn1(20);alert(f(11)); 感觉arg的变量域扩大了一样。源码下载:function_transfer.txt","link":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/javascript/javascript%E5%87%BD%E6%95%B0%E4%BC%A0%E9%80%92/"},{"title":"javascript函数的重载","text":"javascript函数不存在重载的概念。函数的参数与调用没有关系，后面会覆盖前面的定义。如果函数有一个参数，但传入两个参数，仅仅会匹配一个。1234567891011function sum(num1,num2){ return num1+num2;}function sum(num1){ return num1+100;}alert(sum(5));alert(sum(5,10)); 结果都是105，即调用最后一个sum函数。换一种方法，相信大家会容易明白点。12345678910var sum=function(num1,num2){ return num1+num2;};var sum=function(num1){ return num1+100;};alert(sum(5));alert(sum(5,10)); 源码下载:function_reload.txt","link":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/javascript/javascript%E5%87%BD%E6%95%B0%E7%9A%84%E9%87%8D%E8%BD%BD/"},{"title":"javascript函数传递巧解排序","text":"对下面数组进行排序（按数字大小）123var arr=[1,22,13,4,101];arr.sort();alert(arr); 运行后，可以看出默认安装字符串排序。可以在sort函数中传入函数，改变排序规则。12345678var arr=[1,22,13,4,101];function sortByNum(pre,next){ if(pre&gt;next) return 1; else if(pre==next) return 0; else return -1;}arr.sort(sortByNum);alert(arr); 对下面对象进行排序12345678910111213141516function Person(name,age){ this.name=name; this.age=age;}var p1=new Person('Tom',22);var p2=new Person('Ada',16);var p3=new Person('John',14);var p=[p1,p2,p3];p.sort();var show=document.getElementById(&quot;show&quot;);for(var v in p){ show.innerHTML+=p[v].name+&quot; &quot;+p[v].age+&quot;&lt;br/&gt;&quot;;} 结果没有改变，因为不知道根据什么进行排序。根据姓名排序。1234567function sortByName(pre,next){ if(pre.name&gt;next.name) return 1; else if(pre.name==next.name) return 0; else return -1;}p.sort(sortByName) 根据年龄排序。1234567function sortByAge(pre,next){ if(pre.age&gt;next.age) return 1; else if(pre.age==next.age) return 0; else return -1;}p.sort(sortByAge); 思考：如果该对象有100属性，按照上面的逻辑，我们不是得写100个sortByXX才能实现所有的排序，这样代码不就像老太婆的裹脚布又臭又长了。此时利用返回函数的方法就能轻松解决该问题。123456789function sortByProperty(prop){ var rel=function(pre,next){ if(pre[prop]&gt;next[prop]) return 1; else if(pre[prop]==next[prop]) return 0; else return -1; } return rel;}p.sort(sortByProperty(&quot;age&quot;)); 源码下载:function_sort.txt","link":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/javascript/javascript%E5%87%BD%E6%95%B0%E4%BC%A0%E9%80%92%E5%B7%A7%E8%A7%A3%E6%8E%92%E5%BA%8F/"},{"title":"jekyll远程访问配置","text":"执行如下命令1jekyll server --port 80 --host 192.168.1.110","link":"/%E5%8D%9A%E5%AE%A2/jekyll/jekyll%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E9%85%8D%E7%BD%AE/"},{"title":"linux中如何通过ssh连接github","text":"生成新的ssh，放置在/data/.ssh/目录下12ssh-keygen -t rsa -C &quot;821192673@qq.com&quot;#为邮箱地址 将生成的私钥加入ssh-agent中123#判断ssh-agent是否启动eval &quot;$(ssh-agent -s)&quot;ssh-add /data/.ssh/id_rsa 拷贝id_rsa.pub公钥内容，并加入github的ssh中测试是否成功1ssh -T git@github.com","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/linux%E4%B8%AD%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87ssh%E8%BF%9E%E6%8E%A5github/"},{"title":"jdbc访问11g数据库","text":"修改url参数，注意10g与11g的区别1234#10gjdbc:oracle:thin:@ip:port:sid#11gjdbc:oracle:thin:@ip:port/sid","link":"/%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/jdbc%E8%AE%BF%E9%97%AE11g%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"title":"事务的概念及事务的4个特性","text":"概念1事务是用户定义的一个数据库操作序列，这些操作要么全做要么全不做，是一个不可分割的工作单位。 特性1事务具有4 个特性：原子性（Atomicity ）、一致性（consistency ）、隔离性( Isolation ）和持续性（Durability ）。这4 个特性也简称为ACID 特性。 原子性1事务是数据库的逻辑工作单位，事务中包括的诸操作要么都做，要么都不做。 一致性1事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态。 隔离性1一个事务的执行不能被其他事务干扰。即一个事务内部的操作及使用的数据对其他并发事务是隔离的，并发执行的各个事务之间不能互相干扰。 持续性1持续性也称永久性（Perfnanence ) ，指一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。接下来的其他操作或故障不应该对其执行结果有任何影响。","link":"/%E6%95%B0%E6%8D%AE%E5%BA%93/transaction/%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E4%BA%8B%E5%8A%A1%E7%9A%844%E4%B8%AA%E7%89%B9%E6%80%A7/"},{"title":"spring aop概述","text":"概述12AOP:Aspect oriented programing(面向切面编程),它的应用场合是受限的，一般适用于具有横向切面逻辑的应用场合，比如性能检测、访问控制、事务管理及日志记录（很难使用aop编写出实用的程序日志）等。 按照重构的思想，多个类中出现重复的代码，可以考虑定义一个共同的抽象类，将重复代码提取的抽象类中。 场景重现，如下的Horse、Cow对象都拥有eat()、run()方法。123456789101112131415161718public class Cow { public void eat() { System.out.println(this.getClass().getName() + &quot; eat!&quot;); } public void run() { System.out.println(this.getClass().getName() + &quot; run!&quot;); }}public class Horse { public void eat() { System.out.println(this.getClass().getName() + &quot; eat!&quot;); } public void run() { System.out.println(this.getClass().getName() + &quot; run!&quot;); }} 通过引入一个包含eat()和run()方法的抽象的Animal父类，可以消除重复的代码。123456789public abstract class Animal { public void eat() { System.out.println(this.getClass().getName() + &quot; eat!&quot;); } public void run() { System.out.println(this.getClass().getName() + &quot; run!&quot;); }} 一般情况下，通过引入父类消除重复的代码是可行的，但事情并非我们想象的那么简单！如以下论坛管理业务类的代码。12345678910111213141516171819202122public class ForumService { private TransactionManager transactionManager; private PerformanceMonitor performanceMonitor; private ForumDao forumDao; private TopicDao topicDao; public void removeTopic(int topicId) { performanceMonitor.start(); transactionManager.beginTransaction(); topicDao.removeTopic(topicId); transactionManager.commit(); performanceMonitor.end(); } public void create(Forum forum) { performanceMonitor.start(); transactionManager.beginTransaction(); forumDao.create(forum); transactionManager.commit(); performanceMonitor.end(); }} 可以看到业务逻辑代码被重复的非业务逻辑代码（性能检测、事务管理）所包围。如下图所示，我们可以将ForumService业务类看成一段圆木，将removeTopic()和create()方法分别看出圆木的一截。此时，业务代码就类似圆木的树心，性能监视和事务管理就好像一个年轮。 因为这些横向逻辑依附在业务类方法的流程中，不能转移到其他地方去。AOP通过横向抽取机制为重复性代码（无法通过纵向继承体系进行抽象的）提供解决方案。 AOP希望将这些分散在各个业务逻辑代码中的相同代码，通过横向切割的方式抽取到一个独立的模块中，还业务逻辑类一个清新的世界。需要解决的问题1如何将这些独立的逻辑融合到业务逻辑中完成和原来一样的业务操作。","link":"/spring/aop/spring-aop%E6%A6%82%E8%BF%B0/"},{"title":"如何解决mybaits insert 字段null的问题","text":"可在mybatis配置文件settings节点中，加入如下内容123&lt;settings&gt; &lt;setting name=&quot;jdbcTypeForNull&quot; value=&quot;NULL&quot;/&gt;&lt;/settings&gt;","link":"/mybatis/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3mybaits-insert-%E5%AD%97%E6%AE%B5null%E7%9A%84%E9%97%AE%E9%A2%98/"},{"title":"rabbitmq在windows平台下环境搭建","text":"下载erlang（密码：7s0g）安装配置环境变量 下载rabbitmq（密码：bj2r）安装配置环境变量 安装web监控，在命令提示符中输入如下代码（记得重启命令提示符和管理权限）1rabbitmq-plugins enable rabbitmq_management 重启服务12rabbitmq-service stoprabbitmq-service start 打开浏览器，输入http://localhost:15672默认用户及密码：guest/guest（仅在本机访问，一般重新创建用户）","link":"/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/rabbitmq/rabbitmq%E5%9C%A8windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"},{"title":"spring aop 术语","text":"Joinpoint(连接点)12345程序执行的某个特定位置（如类开始初始化前、类初始化后、类某个方法调用前、调用后、方法抛出异常后）。一个类或一段程序代码拥有一些具有边界性质的特定点。spring仅支持方法的连接点，即仅能在方法调用前、方法调用后、方法抛出异常时及方法调用前后程序执行点织入代码。连接点有两个信息确定：第一是用方法表示的程序执行点，第二是用相对点表示的方位。spring使用切点对执行点进行定位，而方位则在增强类型中定义。 切点(Pointcut)1234每个程序类都拥有多个连接点，即连接点是程序类中客观存在的事物。AOP通过切点定位特定连接点。连接点相当于数据库中的记录，而切点相当于查询条件。一个切点可以匹配多个连接点。 增强(advice)12增强是织入目标类连接点上的一段程序代码。在spring中，增强除由于描述一段程序代码外，还拥有执行点的方位信息。 目标类（Target）1增强逻辑的织入目标类。 引介（Introduction）12是一种特殊的增强，为目标类增加一些属性和方法。一个类本来没有实现某个接口，通过引介功能，可以动态为该类添加接口的实现逻辑。 织入（Weaving)123456将增强添加到目标类具体连接点的过程。AOP有三种织入方式：1、编译期织入，使用特殊的JAVA编译期2、类装载期织入，使用特殊的类装载期3、动态代理织入，在运行期为目标类添加增强生成子类的方式spring采用动态代理织入，而AspectJ采用编译期织入和类装载期织入。 代理（Proxy)12一个类被AOP织入增强后，就生成一个融合了原类和增强逻辑的代理类。代理类可能是和原类具有相同接口的类，也可能是原类的子类。 切面（Aspect)1由切点和增强组成。 AOP的工作重点121、如何通过切点和增强定位到连接点上。2、如何在增强中编写切面的代码。","link":"/spring/aop/spring-aop-%E6%9C%AF%E8%AF%AD/"},{"title":"rabbitmq修改存储路径","text":"设置RABBIT_BASE环境变量 安装web监控，在命令提示符中输入如下代码（记得重启命令提示符和管理权限）1rabbitmq-plugins enable rabbitmq_management 启动服务123#更新服务配置rabbitmq-service installrabbitmq-service start 打开浏览器，输入http://localhost:15672（默认用户及密码：guest/guest）","link":"/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/rabbitmq/rabbitmq%E4%BF%AE%E6%94%B9%E5%AD%98%E5%82%A8%E8%B7%AF%E5%BE%84/"},{"title":"eclipse保存文件时自动格式化代码","text":"进入windows–&gt;Preferences–&gt;Java –&gt; Editor–&gt;Save Actions","link":"/IDE/eclipse/eclipse%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6%E6%97%B6%E8%87%AA%E5%8A%A8%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%BB%A3%E7%A0%81/"},{"title":"eclipse如何使用google风格代码","text":"下载文件eclipse-java-google-style.xml导入文件：Eclipse-&gt;window-&gt;preferences-&gt;Java-&gt;Code Style-&gt;Formatter-&gt;Import 选择eclipse-java-google-style.xml文件 默认的缩进是2格，一般习惯都是四格的缩进，可以在edit里面修改一下","link":"/IDE/eclipse/eclipse%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8google%E9%A3%8E%E6%A0%BC%E4%BB%A3%E7%A0%81/"},{"title":"在centos6.6(x64)平台下如何搭建docker","text":"安装epel源1yum install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm 安装docker1yum install docker-io 启动docker12service docker startchkconfig docker on#设置开机启动 验证是否启动成功1docker info","link":"/docker/%E5%9C%A8centos6-6-x64-%E5%B9%B3%E5%8F%B0%E4%B8%8B%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BAdocker/"},{"title":"nodepad++文本编辑器安装emmet插件","text":"安装nodepad++安装emmet插件 修改快捷方式为TAB 测试安装是否成功新建文档，输入html:5，按TAB键。神奇的事情发生了。原始代码1html:5 变化后的代码12345678910&lt;!doctype html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;/body&gt;&lt;/html&gt; 如出现Unknown exception和python script plugin did not accept the script错误提示，不要惊慌。重新安装python script就行了。","link":"/emmet/nodepad-%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%89%E8%A3%85emmet%E6%8F%92%E4%BB%B6/"},{"title":"keytool-maven-plugin的简单使用","text":"在pom文件的plugin节点中加入如下内容1234567891011121314&lt;plugin&gt; &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt; &lt;artifactId&gt;keytool-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.4&lt;/version&gt; &lt;configuration&gt; &lt;keystore&gt;${basedir}/src/main/resources/yands.keystore&lt;/keystore&gt; &lt;dname&gt;cn=localhost&lt;/dname&gt; &lt;keypass&gt;changeit&lt;/keypass&gt; &lt;storepass&gt;changeit&lt;/storepass&gt; &lt;alias&gt;yands&lt;/alias&gt; &lt;keyalg&gt;RSA&lt;/keyalg&gt; &lt;file&gt;${basedir}/src/main/resources/yands.cer&lt;/file&gt; &lt;/configuration&gt;&lt;/plugin&gt; 解释如下 步骤如下1、删除已经存在的keystore文件1keytool:clean 2、生成keystore文件1keytool:generateKeyPair 3、生成客户端使用cer文件1keytool:exportCertificate","link":"/%E6%9E%84%E5%BB%BA/maven/keytool-maven-plugin%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"},{"title":"markdown学习","text":"1.标题设置（让字体变大，和word的标题意思一样） 在Markdown当中设置标题，有两种方式： 第一种：通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题。 第二种：在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大） 测试测试#测试##测试 2.块注释（blockquote） 通过在文字开头添加“&gt;”表示块注释。（当&gt;和文字之间添加五个blank时，块注释的文字会有变化。） 第一种 测试 第二种 测试 3.斜体 将需要设置为斜体的文字两端使用1个“*”或者“_”夹起来 测试测试测试 4.粗体 将需要设置为斜体的文字两端使用2个“*”或者“_”夹起来 测试测试测试 5.无序列表 在文字开头添加(*, +, and -)实现无序列表。但是要注意在(*, +, and -)和文字之间需要添加空格。（建议：一个文档中只是用一种无序列表的表示方式） apple banana pine apple banana pine apple banana pine 6.有序列表 使用数字后面跟上句号。（还要有空格） 第一名 第二名 第三名 7.链接（Links） Markdown中有两种方式，实现链接，分别为内联方式和引用方式。 内联方式：This is an [example link](http://example.com/). 引用方式：I get 10 times more traffic from [Google][1]than from[Yahoo][2] or [MSN][3]. [1]: http://google.com/ &quot;Google&quot; [2]: http://search.yahoo.com/ &quot;Yahoo Search&quot; [3]: http://search.msn.com/ &quot;MSN Search&quot; 点此进入百度 点此进入 [百度][1] [百度][2] [百度][3][1]: http://www.baidu.com “百度”[2]: http://www.baidu.com “百度”[3]: http://www.baidu.com “百度” 8.图片（Images） 图片的处理方式和链接的处理方式，非常的类似。 内联方式：![alttext](/path/to/img.jpg &quot;Title&quot;) 引用方式：![alt text][id][id]: /path/to/img.jpg &quot;Title&quot; 图片1![小鸟][1]图片2![小鸟][2][1]:http://images.china.cn/attachement/jpg/site1000/20101215/001aa0ba776e0e72e3af22.jpg “小鸟”[2]:http://images.china.cn/attachement/jpg/site1000/20101215/001aa0ba776e0e72e3af22.jpg “小鸟” 9.代码（HTML中所谓的Code） 实现方式有两种： 第一种：简单文字出现一个代码框。使用`&lt;blockquote&gt;`。（`不是单引号而是左上角的ESC下面~中的`） 第二种：大片文字需要实现代码框。使用Tab和四个空格。 第一种方式 public class Student { private String nae; private int age; public String getName { return name; } }第二种方 {&quot;name&quot;:&quot;测试&quot;,age:12} 或 {&quot;name&quot;:&quot;测试&quot;,age:12} 10.脚注（footnote 实现方式如下： hello[^hello] [^hello]: hi hello^hello 11.下划线 在空白行下方添加三条“-”横线。（前面讲过在文字下方添加“-”，实现的2级标题）","link":"/markdown/markdown%E5%AD%A6%E4%B9%A0/"},{"title":"oauth2.0-各种授权类型示例代码","text":"1、authorization_code1.1、请求临时令牌请求 1https://oauth2server.com/oauth/authorize?client_id=a17c21ed&amp;response_type=code&amp;state=5ca75bd30&amp;redirect_uri=https://oauth2client.com/auth 响应 1https://oauth2client.com/cb?code=Yzk5ZDczMzRlNDEwY 异常 12345HTTP/1.1 2 FoundLocation: https://oauth2client.com/redirect?error=access_denied &amp;error_description=The+user+denied+the+request &amp;error_uri=https://oauth2server.com/error/access_denied &amp;state=wxyz1234 1.2、交换获取令牌请求 1234567POST /oauth/token HTTP/1.1Host: oauth2server.com code=Yzk5ZDczMzRlNDEwY&amp;grant_type=code&amp;client_id=mRkZGFjM&amp;client_secret=ZGVmMjMz 响应 12345678910111213HTTP/1.1 200 OKContent-Type: application/json;charset=utf-8Cache-Control: no-storePragma: no-cache { &quot;access_token&quot;:&quot;MTQ0NjJkZmQ5OTM2NDE1ZTZjNGZmZjI3&quot;, &quot;token_type&quot;:&quot;bearer&quot;, &quot;expires_in&quot;:3600, &quot;refresh_token&quot;:&quot;IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk&quot;, &quot;scope&quot;:&quot;create&quot;, &quot;state&quot;:&quot;12345678&quot;} 异常 12345678910HTTP/1.1 400 Bad RequestContent-Type: application/json;charset=UTF-8Cache-Control: no-storePragma: no-cache { &quot;error&quot;: &quot;invalid_request&quot;, &quot;error_description&quot;: &quot;Request was missing the 'redirect_uri' parameter.&quot;, &quot;error_uri&quot;: &quot;See the full API docs at http://oauth2server.com/docs/access_token&quot;} 2、Implicit Grant2.1、browser-base请求 1https://oauth2server.com/oauth/authorize?response_type=token&amp;client_id=mRkZGFjM&amp;state=TY2OTZhZGFk 响应 1https://oauth2client.com/cb#token=Yzk5ZDczMzRlNDEwY&amp;state=TY2OTZhZGFk 2.2、mobile and native app请求 1https://www.arcgis.com/sharing/oauth2/authorize?client_id=eKNjzFFjH9A1ysYd&amp;response_type=token&amp;redirect_uri=exampleapp://auth 响应 1oauthdemo://auth#access_token=lS0KgilpRsT07qT_iMOg9bBSaWqODC1g061nSLsa8gV2GYtyynB6A-abCsWrDTvN9p7rI0kWa4u-ORXuFUQ7QGxiiniwpCSIV1AqzoLRHF1hYcI4joeDPOzZa9PZigiudtefciZy5&amp;expires_in=7199&amp;username=aaronpk 3、Paasword Grant请求 12345678POST /oauth/token HTTP/1.1Host: oauth2server.com grant_type=password&amp;username=user@example.com&amp;password=1234luggage&amp;client_id=xxxxxxxxxx&amp;client_secret=xxxxxxxxxx 4、Client Credentials概述 1访问自身资源，不代表用户行为 请求 123456POST /oauth/token HTTP/1.1Host: oauth2server.com grant_type=client_credentials&amp;client_id=xxxxxxxxxx&amp;client_secret=xxxxxxxxxx 5、refresh token注意 1如果包含scope,需与上一次的scope相同 请求 1234567POST /oauth/token HTTP/1.1Host: oauth2server.com grant_type=refresh_token&amp;refresh_token=xxxxxxxxxxx&amp;client_id=xxxxxxxxxx&amp;client_secret=xxxxxxxxxx","link":"/%E5%AE%89%E5%85%A8/oauth2-0/oauth2-0-%E5%90%84%E7%A7%8D%E6%8E%88%E6%9D%83%E7%B1%BB%E5%9E%8B%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81/"},{"title":"oauth2.0-授权过程","text":"1、invalid redirect uri1234包含以下情况无效uri参数丢失uri与注册的不匹配 2、Verifying the Authorization Request2.1、verify client id2.2、verify redirect uri1234如果服务端允许APP注册多个redirect uri，那么需要分两步校验。如果请求中包含redirect uri，则服务端需确认它是有效的。如果请求中不包含redirect uri,且只注册了一个URI，使用注册的redirect uri。如果请求中不包含redirect uri,且未注册URI，有误。 2.3、verify response type2.4、verify scope2.5、save state1保存该值，并将它包含在获取access token的响应中 3、用户登录1一般，登录成功就相当于授权成功。 4、授权界面12包含服务端信息（如网站名称、网站logo，便于用户识别)，用户身份（如姓名、照片，便于用户知道用那个账号操作），APP信息（APP名称、app网址、app logo）、范围、取消和同意按钮 5、临时令牌12下发后，很短时间需过期，推荐10分钟，大多数是30-60秒，长度是任意的，需声明,最好的实现方案是自我包含（避免在数据库中存储临时令牌，通常通过加密库或jws），需包含client_id、redirect_uri（用在下发access_token校验）、user info(如user id)、过期时间、uid(校验是否被使用过，一般使用数据库id或随机的字符串) 6、scope1主要是为了限制权限，最好是读写分离 7、redirect uri validation123当开发者新建app注册redirect uri时（不包含fragment）；授权请求时；交换获取令牌时； 8、请求令牌8.1、redirect_uri1如果授权请求包含了redirect uri,则token请求必须包含redirect uri 8.2、response1include the additional Cache-Control: no-store and Pragma: no-cache HTTP headers to ensure clients do not cache this request 8.3、令牌生命周期8.3.1、short-lived access token and long live refresh token什么情况下使用 123使用自包含access token;限制access token泄露风险；提供SDK控制access token刷新； 8.3.2、short-lived access token and no refresh token什么情况下使用 123最大保证access token泄露风险；促使用户意识到在授权给第三方应用；不希望第三方应用离线访问用户数据； 8.3.3、non-expiring access token什么情况下使用 有机制回收access token（如存储在数据库）; 泄露不会造成大风险； 提供简单授权机制； 希望第三方应用离线访问用户数据；","link":"/%E5%AE%89%E5%85%A8/oauth2-0/oauth2-0-%E6%8E%88%E6%9D%83%E8%BF%87%E7%A8%8B/"},{"title":"oauth2.0-注册相关","text":"1、概述1APP名称、APP描述、APP icon、HOME PAGE、回调地址、privacy policy、short tagline、是否公开 2、client type123根据是否公开一般来说，server-side是私有，而browser-base，mobile and native app是公有的公有的一般是不生成client_secret，而私有的是不成client_secret 3、client_id长度 1一般采用32-character hex string 4、client_secret长度 1use a cryptographically-secure library to generate a 256-bit value and converting it to a hexadecimal representation 保存方式 1加密或散列（仅展现一次，需客户端保存） 安全 1查看需校验用户身份（如输入密码） 5、delete application12应展示删除该应用的后果，如影响的用户数，应回收所有的access token及其他下发的凭证（如auth code、refresh token） 6、reset secret12不必要使access token 失效无法使用老的secret更新access token","link":"/%E5%AE%89%E5%85%A8/oauth2-0/oauth2-0-%E6%B3%A8%E5%86%8C%E7%9B%B8%E5%85%B3/"},{"title":"hexo安装(ubuntu)","text":"1、安装nodejs2、替换为淘宝npm镜像1npm install -g cnpm --registry=https://registry.npm.taobao.org 3、安装hexo1cnpm install -g hexo-cli","link":"/%E5%8D%9A%E5%AE%A2/hexo/hexo%E5%AE%89%E8%A3%85-ubuntu/"},{"title":"如何将ubuntu打造成mac","text":"1、添加macbuntu源1sudo add-apt-repository ppa:noobslab/macbuntu 2、更新1sudo apt-get update 3、安装相关包1sudo apt-get install macbuntu-os-icons-lts-v8 macbuntu-os-ithemes-lts-v8 slingscold albert macbuntu-os-plank-theme-lts-v8 4、安装unity-tweak-tool1sudo apt-get install unity-tweak-tool 5、打开unity-tweak-tool6、设置主题 7、设置图标 8、设置指针 9、替换Ubuntu Desktop为Mac(需重启)12cd &amp;&amp; wget -O Mac.po http://drive.noobslab.com/data/Mac/change-name-on-panel/mac.pocd /usr/share/locale/zh_CN/LC_MESSAGES; sudo msgfmt -o unity.mo ~/Mac.po;rm ~/Mac.po;cd 其中 /zh_CN/需替换为本机的locale修改前 修改后 10、修改启动器(需重启)12wget -O launcher_bfb.png http://drive.noobslab.com/data/Mac/launcher-logo/apple/launcher_bfb.pngsudo mv launcher_bfb.png /usr/share/unity/icons/ 修改前 修改后 11、修复libreoffice样式1sudo apt-get install libreoffice-style-sifr 打开任意一个libreoffice软件，以writer为例 12、更改Plank打开Plank 在Plank Ctrl+鼠标右击，弹出菜单 13、设置Alert打开alert 设置hot key 14、隐藏侧边栏打开unity-tweak-tool","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E5%A6%82%E4%BD%95%E5%B0%86ubuntu%E6%89%93%E9%80%A0%E6%88%90mac/"},{"title":"禁止git中文文件名转码","text":"如何实现禁止中文文件名转码? 执行如下命令1git config --global core.quotepath false","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/%E7%A6%81%E6%AD%A2git%E4%B8%AD%E6%96%87%E6%96%87%E4%BB%B6%E5%90%8D%E8%BD%AC%E7%A0%81/"},{"title":"修复vi按键错乱","text":"原因：ubuntu vi 默认是安装 vim-tiny 1、卸载1sudo apt-get remove vim-common 2、安装1sudo apt-get install vim","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E4%BF%AE%E5%A4%8Dvi%E9%94%AE%E7%9B%98%E9%94%99%E4%B9%B1/"},{"title":"修复输入法fcitx开机无法自启","text":"编辑~/.profile文件，加入如下内容 12345export LC_ALL=zh_CN.utf8export XMODIFIERS=@im=fcitxexport QT_IM_MODULE=ximexport GTK_IM_MODULE=ximfcitx -d","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E4%BF%AE%E5%A4%8D%E8%BE%93%E5%85%A5%E6%B3%95fcitx%E5%BC%80%E6%9C%BA%E6%97%A0%E6%B3%95%E8%87%AA%E5%90%AF/"},{"title":"android studio 启动出现Unable to access Android SDK add-on list错误","text":"在bin/idea.properties文件最后加入如下内容 1disable.android.first.run=true","link":"/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/android/android-studio-%E5%90%AF%E5%8A%A8%E5%87%BA%E7%8E%B0Unable-to-access-Android-SDK-add-on-list%E9%94%99%E8%AF%AF/"},{"title":"如何clone包含子模块的工程","text":"目前有两种方式1、clone整个项目1git clone git@github.com:sutong/landscape-theme-extends-demo.git --recursive 2、先clone父项目，再更新子项目123git clone git@github.com:sutong/landscape-theme-extends-demo.gitgit submodule initgit submodule update 最后记得进入子模块所在的目录，追踪master分支1git checkout master","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/%E5%A6%82%E4%BD%95clone%E5%8C%85%E5%90%AB%E5%AD%90%E6%A8%A1%E5%9D%97%E7%9A%84%E5%B7%A5%E7%A8%8B/"},{"title":"linux服务器如何实现免密登录","text":"I、背景12以从IP为20.1.1.1的客户端登录到IP为10.1.1.1的服务端为例其中，客户端用户名为client,服务端用户名为server II、服务端1、生成密钥对1ssh-keygen -t rsa 2、将生成的公钥加入到authorized_keys中1cat id_rsa.pub &gt;&gt; authorized_keys 3、修改authroized_keys权限1chmod 600 authorized_keys III、客户端1、传输服务器端生成的私钥（注意保密）1scp -P 22 server@10.1.1.1:/home/client/.ssh/id_rsa ~/.ssh/server_rsa 其中 -P:端口号 2、配置config文件，并加入如下内容1vi ~/.ssh/config 12345Host server_rsaUser serverHostname 10.1.1.1Port 22IdentityFile ~/.ssh/server_rsa 3、测试1ssh server_rsa","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/"},{"title":"git push免输入账号和密码","text":"1、创建文件，加入如下内容1234cd ~touch .git-credentialsvi .git-credentialshttps://{username}:{password}@{domain}{:port} 2、执行如下命令1git config --global credential.helper store 3、打开~/.gitconfig文件查看12[credential]helper = store","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/git-push%E5%85%8D%E8%BE%93%E5%85%A5%E8%B4%A6%E5%8F%B7%E5%92%8C%E5%AF%86%E7%A0%81/"},{"title":"解决ubuntu下搜狗输入法不能输入中文","text":"现象1可以呼出输入法界面，但是候选词列表无显示 方法一、重启搜狗输入法123killall fcitxkillall sogou-qimpanelfcitx 方法二、修复依赖1sudo apt install -f 方法三、删除配置文件，重启搜狗1234rm -rf ~/.config/sogou-qimpanelrm -rf ~/.config/SogouPYrm -rf ~/.config/SogouPY.userssogou-qimpanel","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E8%A7%A3%E5%86%B3ubuntu%E4%B8%8B%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E4%B8%8D%E8%83%BD%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87/"},{"title":"修复ubuntu16.10与window双系统时间同步异常","text":"在ubuntu系统执行如下命令1sudo timedatectl set-local-rtc 1","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E4%BF%AE%E5%A4%8Dubuntu16-10%E4%B8%8Ewindow%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5%E5%BC%82%E5%B8%B8/"},{"title":"linux下git默认编辑器修改","text":"git默认的编辑器是nano，使用起来不方便。 1、执行如下命令，修改默认编辑器为vim。1git config --global core.editor vim 2、打开~/.gitconfig文件查看12[core]editor=vim","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/linux%E4%B8%8Bgit%E9%BB%98%E8%AE%A4%E7%BC%96%E8%BE%91%E5%99%A8%E4%BF%AE%E6%94%B9/"},{"title":"解决Mysql Workbeach 1175 错误","text":"背景123使用MySQL Workbench进行批量更新时，报如下错误Error Code: 1175You are using safe...without a WHERE that uses a KEY column 解决方法1、打开Workbench的菜单[Edit]-&gt;[Preferences…]2、切换到[SQL Editor]页面3、把[Forbid UPDATE and DELETE statements without a WHERE clause (safe updates)]之前的对勾去掉4、点击[OK]按钮5、最后记得要重启一下sql editor,建立一个新的连接就可以了","link":"/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Workbench/%E8%A7%A3%E5%86%B3Mysql-Workbeach-1175-%E9%94%99%E8%AF%AF/"},{"title":"chrome打开新的标签，显示无法访问该网站","text":"chrome浏览器打开新标签时，出现如下状况，如何解决 1、打开浏览器，输入chrome://net-internals/#hsts2、在 Input a domain name to add it to the HSTS set: 这一行下面的 Domain: [ ]输入 www.google.com.hk 点 Add注：该方法可以让访问www.google.com.hk的时候，自动使用https协议","link":"/%E6%B5%8F%E8%A7%88%E5%99%A8/chrome/chrome%E6%89%93%E5%BC%80%E6%96%B0%E7%9A%84%E6%A0%87%E7%AD%BE%EF%BC%8C%E6%98%BE%E7%A4%BA%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E8%AF%A5%E7%BD%91%E7%AB%99/"},{"title":"git打标签","text":"背景1以develop分支某一时间点，打标签，加上发布内容,发布到git服务器。 1、切换分支1git check develop 2、更新代码1git pull origin develop 3、查看日志1git log 内容如下 12345678910111213141516171819202122232425262728293031commit 9dbbe55481b802dece63a804e178ff5761d1440dAuthor: fish &lt;meikehuan@163.com&gt;Date: Mon Jul 31 20:29:54 2017 +0800 修改code，账号密码有误commit 16c0be37d8d3ae12938390dec5a5aad7ad75d960Author: fish &lt;meikehuan@163.com&gt;Date: Mon Jul 31 20:13:55 2017 +0800 修改文案commit b8ffba711207a167a7b23ebd486d9408acbb5f25Author: fish &lt;meikehuan@163.com&gt;Date: Mon Jul 31 19:43:20 2017 +0800 debugcommit 0f1e18cc09906c2e01262a88d445ff2fec19d103Author: fish &lt;meikehuan@163.com&gt;Date: Mon Jul 31 19:38:14 2017 +0800 增加修改密码接口commit 51b4e57b1a05e7845c9b18857d58e002e1fef5f1Author: fish &lt;meikehuan@163.com&gt;Date: Mon Jul 31 17:09:07 2017 +0800 类型修改commit 656bbdf726f136e3d3e812f594095ea29f766cd1 4、打标签1git tag -a -m &quot;message&quot; tagName commitId 说明 123message：后面的message为发布内容tagName: 标签名，格式为v+版本号，如v1.0.1commitId: 通过git log 获取，如b8ffba711207a167a7b23ebd486d9408acbb5f25 5、推送到服务器1git push origin tagName 说明 1tagName: 标签名，与第4步标签名相同","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/git%E6%89%93%E6%A0%87%E7%AD%BE/"},{"title":"mysql导出表结构及数据","text":"1、导出数据库为dbname的表结构（其中用户名为user,密码为pwd,ip为host,端口为port,生成的脚本名为db.sql）1mysqldump -hhost -Pport -uuser -ppwd -d dbname &gt;db.sql; 2、导出数据库为dbname某张表(test)结构1mysqldump -hhost -Pport -uuser -ppwd -d dbname test &gt;db.sql; 3、导出数据库为dbname所有表结构及表数据（不加-d）1mysqldump -hhost -Pport -uuser -ppwd dbname &gt;db.sql; 4、导出数据库为dbname某张表(test)结构及表数据（不加-d）1mysqldump -hhost -Pport -uuser -ppwd dbname test &gt;db.sql;","link":"/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql%E5%AF%BC%E5%87%BA%E8%A1%A8%E7%BB%93%E6%9E%84%E5%8F%8A%E6%95%B0%E6%8D%AE/"},{"title":"如何按列去除重复数据（linux）","text":"背景123将oui.csv文件内容导入数据库，将Assignment字段作为主键，发现该列数据有重复，导入失败，需要对该文件按指定列进行去重在进行导入。 文件内容如下，展示10行12345678910Registry,Assignment,Organization Name,Organization AddressMA-L,E043DB,Shenzhen ViewAt Technology Co.，Ltd. ,9A，Microprofit，6th Gaoxin South Road， High-Tech Industrial Park， Nanshan， Shenzhen， CHINA. shenzhen guangdong CN 518057 MA-L,2405F5,Integrated Device Technology (Malaysia) Sdn. Bhd.,Phase 3， Bayan Lepas FIZ Bayan Lepas Penang MY 11900 MA-L,3CD92B,Hewlett Packard,11445 Compaq Center Drive Houston US 77070 MA-L,9C8E99,Hewlett Packard,11445 Compaq Center Drive Houston US 77070 MA-L,B499BA,Hewlett Packard,11445 Compaq Center Drive Houston US 77070 MA-L,1CC1DE,Hewlett Packard,11445 Compaq Center Drive Houston US 77070 MA-L,3C3556,Cognitec Systems GmbH,Großenhainer Str. 101 Dresden Saxony DE 01127 MA-L,0050BA,D-Link Corporation,2F， NO. 233L-2， PAO-CHIAO RD. TAIPEI TW 0000 MA-L,00179A,D-Link Corporation,No. 289， Sinhu 3rd Rd.， Neihu District， Taipei TW 114 使用sort命令，重复数据仅保留一行1sort -t ',' -k 2,2 -u oui.csv 说明123-t 指定分隔符-k 指定某列-u 去重 使用sort+uniq命令，去除重复数据1sort -t ',' -k 2,2 oui.csv.f|uniq -s 5 -w 6 -u 说明123-s 跳过字符数-w 比较几位字符数-u 去重 显示重复数据详情1sort -t ',' -k 2,2 oui.csv.f|uniq -s 5 -w 6 -D 内容12345MA-L,0001C8,CONRAD CORP., MA-L,0001C8,THOMAS CONRAD CORP.,1908-R KRAMER LANE AUSTIN TX US 78758 MA-L,080030,CERN,CH-1211 GENEVE 23 CH SUISSE/SWITZ MA-L,080030,NETWORK RESEARCH CORPORATION,2380 N. ROSE AVENUE OXNARD CA US 93010 MA-L,080030,ROYAL MELBOURNE INST OF TECH,GPO BOX 2476V MELBOURNE VIC AU 3001 说明1-D 显示详细重复数据 显示重复数据及出现次数1sort -t ',' -k 2,2 oui.csv.f|uniq -s 5 -w 6 -cd 内容122 MA-L,0001C8,CONRAD CORP., 3 MA-L,080030,CERN,CH-1211 GENEVE 23 CH SUISSE/SWITZ 说明12-c 次数-d 显示重复数据仅一条 原始文件 oui.csv","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E5%A6%82%E4%BD%95%E6%8C%89%E5%88%97%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE%EF%BC%88linux%EF%BC%89/"},{"title":"git发布正式版本流程","text":"背景11.0.0-SNAPSHOT开发完成后，需要发布正式版本1.0.0 1、创建预发布分支1git checkout -b release-1.0.0 develop 2、修改版本号3、提交修改4、切换到master分支1git checkout master 5、合并到master分支1git merge --no-ff release-1.0.0 6、做标签1git tag -a 1.0.0 7、切换到develop分支1git checkout develop 8、合并到develop1git merge --no-ff release-1.0.0 9、删除预发布分支1git branch -d release-1.0.0 10、推送到远程仓库123git push origin mastergit push origin developgit push origin 1.0.0","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/git%E6%AD%A3%E5%BC%8F%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83%E6%B5%81%E7%A8%8B/"},{"title":"git bug分支流程","text":"背景1正式版本1.0.0发布后，发现bug，需创建bug分支，进行修补 1、从master分支中分出分支fixbug-1.0.01git checkout -b fixbug-1.0.0 master 2、修复分支，并提交3、切换到master分支1git checkout master 4、合并到master分支1git merge --no-ff fixbug-1.0.0 5、做标签1git tag -a 1.0.1 6、切换到develop分支1git checkout develop 7、合并到develop分支1git merge --no-ff fixbug-1.0.0 8、删除该bug分支1git branch -d fixbug-1.0.0 9、推送到远程仓库123git push origin mastergit push origin developgit push origin 1.0.1","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/git-bug%E5%88%86%E6%94%AF%E6%B5%81%E7%A8%8B/"},{"title":"flex布局","text":"1、flexDirection(column,row)1默认值:column,即竖直方向 2、justifyContent(flex-start, center, flex-end, space-around, space-between)123默认值：flex-start当为column,竖直看；当为row,水平看； 3、alignItem(flex-start, center, flex-end, stretch)12默认值：stretch与justifyContent相反 a、stretch12345起效条件当flexDirection为row,且未指定height或当flexDirection为cloumn,且未指定width,该起效条件下，若alignItem指定其他值，不显示。 4、flex1234子组件能够充满父容器剩余空间必须父容器的尺寸不为 0 ，如果父容器既没有指定width、height，同时也没有设定flex：1,那么子组件将不会显示（即使子组件设置了flex）。父组件默认设置flex：1（默认充满整个剩余空间） 5、原则1方向：从左到右或从上到下","link":"/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/react-native/flex%E5%B8%83%E5%B1%80/"},{"title":"如何从vim外拷贝并复制文本","text":"1、复制需要的文本。2、在vim中按shift+Insert拷贝。","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E5%A6%82%E4%BD%95%E4%BB%8Evim%E5%A4%96%E6%8B%B7%E8%B4%9D%E5%B9%B6%E5%A4%8D%E5%88%B6%E6%96%87%E6%9C%AC/"},{"title":"如何解决linux挂载ntfs格式的设备无写权限？","text":"1安装ntfs-3g","link":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3linux%E6%8C%82%E8%BD%BDntfs%E6%A0%BC%E5%BC%8F%E7%9A%84%E8%AE%BE%E5%A4%87%E6%97%A0%E5%86%99%E6%9D%83%E9%99%90%EF%BC%9F/"},{"title":"linux与genymotion模拟串口通信","text":"在linux中如何模拟串口与安卓虚拟机genynotion进行通讯？1、打开vm virtualbox,选中相应的虚拟机 2、右击设置，选中串口，配置如下 ** 注 ** 12端口模式选为主机管道路径/地址：/tmp/文件名随意，解决访问权限 3、在linux中 执行如下命令1socat unix-connect:/tmp/mock tcp-listen:12345 ** 注 ** 12/tmp/mock:为步骤2中串口路径中配置的路径12345：为端口 4、打开telnet,模拟交互1telnet 127.0.0.1 12345 ** 注 ** 112345：为步骤3中配置的端口","link":"/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/android/linux%E4%B8%8Egenymotion%E6%A8%A1%E6%8B%9F%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/"},{"title":"docker容器时间同步","text":"1docker run -e &quot;TZ=Asia/Shanghai&quot;","link":"/docker/docker%E5%AE%B9%E5%99%A8%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"},{"title":"openssl单双向认证","text":"1.1、ssl生成 1.1.1、CA证书 1.1.2、server证书 1.1.3、client证书 1.2、ssl配置 1.2.1、单向 1.2.2、双向 1.1、ssl生成1.1.1、CA证书 创建私钥(ca.key)1openssl genrsa -out ca/ca.key 创建请求(ca.csr)1openssl req -new -out ca/ca.csr -key ca/ca.key -subj '/C=CN/ST=ZhengJiang/L=WenZhou/O=SimilarSu CA Corp' 自签署证书(ca.crt)1openssl x509 -req -in ca/ca.csr -out ca/ca.crt -signkey ca/ca.key -days 3650 -extensions v3_ca 将.crt 文件导入到JKS文件(ca.jks)1keytool -keystore ca/ca.jks -keypass cacajks -storepass cacajks -alias ca -import -trustcacerts -file ca/ca.crt 1.1.2、server端证书创建私钥（server.key）1openssl genrsa -out server/server.key 创建请求(server.csr)1openssl req -new -out server/server.csr -key server/server.key -subj '/C=CN/ST=Zhengjiang/L=WenZhou/O=SimilarSu Server Corp/OU=dev/CN=localhost' 签署证书(server.crt)1openssl x509 -req -in server/server.csr -out server/server.crt -signkey server/server.key -CA ca/ca.crt -CAkey ca/ca.key -CAcreateserial -days 3650 -extensions v3_ca 导出.p12格式(server.p12)1openssl pkcs12 -export -in server/server.crt -inkey server/server.key -out server/server.p12 -passout pass:serverp12 将.p12 文件导入到JKS文件(server.keystore)1keytool -importkeystore -v -srckeystore server/server.p12 -srcstoretype pkcs12 -srcstorepass serverp12 -destkeystore server/server.jks -deststoretype jks -deststorepass serverp12 注意：srcstorepass与deststorepass需要相同 1.1.3、client端证书创建私钥（client.key）1openssl genrsa -out client/client.key 创建请求(client.csr)1openssl req -new -out client/client.csr -key client/client.key -subj '/C=CN/ST=Zhengjiang/L=WenZhou/O=SimilarSu Server Corp/OU=dev/CN=client' 签署证书(client.crt)1openssl x509 -req -in client/client.csr -out client/client.crt -signkey client/client.key -CA ca/ca.crt -CAkey ca/ca.key -CAcreateserial -days 3650 -extensions v3_ca 导出.p12格式(client.p12)1openssl pkcs12 -export -in client/client.crt -inkey client/client.key -out client/client.p12 -passout pass:clientp12 1.2、ssl配置1.2.1、单向服务端1234server: ssl: key-store: classpath:ssl/server/server.jks key-password: serverp12 客户端1使用ca.crt(非必要) 1.2.2、双向服务端1234567server: ssl: key-store: classpath:ssl/server/server.jks key-password: serverp12 trust-store: classpath:ssl/ca/ca.jks trust-store-password: cacajks client-auth: need 客户端12使用ca.crt(非必要)需倒入client.p12","link":"/%E5%AE%89%E5%85%A8/ssl/openssl%E5%8D%95%E5%8F%8C%E5%90%91%E8%AE%A4%E8%AF%81/"},{"title":"svn备份迁移","text":"1、背景123456789需要将10.1.1.1主机上的svn仓库迁移到10.1.1.2主机上10.1.1.1上svn结构如下：E:/svnrepo---firstrepo---secondrepo---thirdrepo10.1.1.2上结构如下：F:/svnrepo 注意：将svn相关命令配置到环境变量中 2、备份2.1、进入10.1.1.1的E:/svnrepo2.2、导出仓库firstrepo1svnadmin dump firstrepo &gt; F:/firstrepo.dump 3、迁移3.1、将10.1.1.1中的F:/firstrepo.dump拷贝到10.1.1.2的E:/firstrepo.dump3.2、进入10.1.1.2的F:/svnrepo3.3、新建仓库firstrepo1svnadmin create firstrepo 3.4、导入仓库1svnadmin load firstrepo &lt; E:/firstrepo.dump 3.5、启动1svnserve -d -r F:/svnrepo","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/svn/svn%E5%A4%87%E4%BB%BD%E8%BF%81%E7%A7%BB/"},{"title":"svn如何迁移到git","text":"1、背景12345678910111213141516171819202122232425262728293031323334svn仓库doc目录结构如下：- test - trunk - src - test - branches - 1.0.0 - src - test - 2.0.0 - src - test - tags - v1.0.0 - src - test - v2.0.0 - src - test- test2 - trunk - code - src - test - branches - 1.0.0 - code - src - test - tags - 1.0.0 - code - src - test 2、将doc中的test迁移到git中2.1、配置用户转化文件authors.txt，内容如下123st=Similar Su&lt;similarsu@qq.com&gt;VisualSVN Server=Similar Su&lt;similarsu@qq.com&gt;…… 2.2、安装git-svn命令1sudo apt install git-svn 2.3、转化成git1git svn clone --trunk=/test/trunk --branches=/test/branches --tags=/test/tags --authors-file=authors.txt svn://localhost/doc test 3、将doc中的test2/branches/1.0.0/code 迁移到git中3.1、执行如下命令1git svn clone --branches=/test2/branches/1.0.0/code --authors-file=authors.txt svn://localhost/doc code","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/svn/svn%E5%A6%82%E4%BD%95%E8%BF%81%E7%A7%BB%E5%88%B0git/"},{"title":"git历史commit用户名密码修改","text":"1git filter-branch -f --env-filter &quot;GIT_AUTHOR_NAME='SimilarSu'; GIT_AUTHOR_EMAIL='similarsu@qq.com'; GIT_COMMITTER_NAME='sutong'; GIT_COMMITTER_EMAIL='821192673@qq.com';&quot; HEAD 其中GIT_AUTHOR为新的，GIT_COMMITTER为老的","link":"/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/git%E5%8E%86%E5%8F%B2commit%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9/"},{"title":"chrome80与cookie的二三事","text":"前生今世https://blog.chromium.org/2019/10/developers-get-ready-for-new.html 暗渡陈仓注：仅针对跨域问题 暴力法（简单） 打开浏览器，在地址栏中输入chrome://flags 修改设置 推荐法（复杂）主要是后台服务进行修改 cookie 修改 1在cookie值中加入; SameSite=None; Secure=true http改为https 半残法（不确定）主要是后台服务进行修改 cookie 修改 1在cookie值中加入; SameSite=None 经测试，部分版本的80浏览器可以起效，不推荐使用","link":"/%E6%B5%8F%E8%A7%88%E5%99%A8/chrome/chrome80%E4%B8%8Ecookie%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B/"}],"tags":[{"name":"操作系统","slug":"操作系统","link":"/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"win8","slug":"win8","link":"/tags/win8/"},{"name":"文件","slug":"文件","link":"/tags/%E6%96%87%E4%BB%B6/"},{"name":"文件夹","slug":"文件夹","link":"/tags/%E6%96%87%E4%BB%B6%E5%A4%B9/"},{"name":"占用","slug":"占用","link":"/tags/%E5%8D%A0%E7%94%A8/"},{"name":"github","slug":"github","link":"/tags/github/"},{"name":"jekyll","slug":"jekyll","link":"/tags/jekyll/"},{"name":"ruby","slug":"ruby","link":"/tags/ruby/"},{"name":"rails","slug":"rails","link":"/tags/rails/"},{"name":"install","slug":"install","link":"/tags/install/"},{"name":"clone","slug":"clone","link":"/tags/clone/"},{"name":"数据库","slug":"数据库","link":"/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"oracle","slug":"oracle","link":"/tags/oracle/"},{"name":"sqlplus","slug":"sqlplus","link":"/tags/sqlplus/"},{"name":"远程","slug":"远程","link":"/tags/%E8%BF%9C%E7%A8%8B/"},{"name":"sys","slug":"sys","link":"/tags/sys/"},{"name":"忘记","slug":"忘记","link":"/tags/%E5%BF%98%E8%AE%B0/"},{"name":"密码","slug":"密码","link":"/tags/%E5%AF%86%E7%A0%81/"},{"name":"表","slug":"表","link":"/tags/%E8%A1%A8/"},{"name":"迁移","slug":"迁移","link":"/tags/%E8%BF%81%E7%A7%BB/"},{"name":"powerdesigner","slug":"powerdesigner","link":"/tags/powerdesigner/"},{"name":"外键","slug":"外键","link":"/tags/%E5%A4%96%E9%94%AE/"},{"name":"sql","slug":"sql","link":"/tags/sql/"},{"name":"引导","slug":"引导","link":"/tags/%E5%BC%95%E5%AF%BC/"},{"name":"去除","slug":"去除","link":"/tags/%E5%8E%BB%E9%99%A4/"},{"name":"svn","slug":"svn","link":"/tags/svn/"},{"name":"commit","slug":"commit","link":"/tags/commit/"},{"name":"message","slug":"message","link":"/tags/message/"},{"name":"tomcat","slug":"tomcat","link":"/tags/tomcat/"},{"name":"PermGen space","slug":"PermGen-space","link":"/tags/PermGen-space/"},{"name":"hudson","slug":"hudson","link":"/tags/hudson/"},{"name":"home","slug":"home","link":"/tags/home/"},{"name":"修改","slug":"修改","link":"/tags/%E4%BF%AE%E6%94%B9/"},{"name":"eclipse","slug":"eclipse","link":"/tags/eclipse/"},{"name":"maven","slug":"maven","link":"/tags/maven/"},{"name":"Enabling Maven Dependency Management","slug":"Enabling-Maven-Dependency-Management","link":"/tags/Enabling-Maven-Dependency-Management/"},{"name":"ie8","slug":"ie8","link":"/tags/ie8/"},{"name":"ie6","slug":"ie6","link":"/tags/ie6/"},{"name":"变为","slug":"变为","link":"/tags/%E5%8F%98%E4%B8%BA/"},{"name":"mysql","slug":"mysql","link":"/tags/mysql/"},{"name":"用户","slug":"用户","link":"/tags/%E7%94%A8%E6%88%B7/"},{"name":"create","slug":"create","link":"/tags/create/"},{"name":"创建","slug":"创建","link":"/tags/%E5%88%9B%E5%BB%BA/"},{"name":"vmware","slug":"vmware","link":"/tags/vmware/"},{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"window","slug":"window","link":"/tags/window/"},{"name":"文件共享","slug":"文件共享","link":"/tags/%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/"},{"name":"nodejs","slug":"nodejs","link":"/tags/nodejs/"},{"name":"安装","slug":"安装","link":"/tags/%E5%AE%89%E8%A3%85/"},{"name":"gcc","slug":"gcc","link":"/tags/gcc/"},{"name":"TortoiseGit","slug":"TortoiseGit","link":"/tags/TortoiseGit/"},{"name":"ssh","slug":"ssh","link":"/tags/ssh/"},{"name":"javascript","slug":"javascript","link":"/tags/javascript/"},{"name":"function","slug":"function","link":"/tags/function/"},{"name":"定义","slug":"定义","link":"/tags/%E5%AE%9A%E4%B9%89/"},{"name":"传递","slug":"传递","link":"/tags/%E4%BC%A0%E9%80%92/"},{"name":"重载","slug":"重载","link":"/tags/%E9%87%8D%E8%BD%BD/"},{"name":"排序","slug":"排序","link":"/tags/%E6%8E%92%E5%BA%8F/"},{"name":"远程访问","slug":"远程访问","link":"/tags/%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"},{"name":"server","slug":"server","link":"/tags/server/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"jdbc","slug":"jdbc","link":"/tags/jdbc/"},{"name":"11g","slug":"11g","link":"/tags/11g/"},{"name":"事务","slug":"事务","link":"/tags/%E4%BA%8B%E5%8A%A1/"},{"name":"概念","slug":"概念","link":"/tags/%E6%A6%82%E5%BF%B5/"},{"name":"特性","slug":"特性","link":"/tags/%E7%89%B9%E6%80%A7/"},{"name":"spring","slug":"spring","link":"/tags/spring/"},{"name":"aop","slug":"aop","link":"/tags/aop/"},{"name":"概述","slug":"概述","link":"/tags/%E6%A6%82%E8%BF%B0/"},{"name":"mybatis","slug":"mybatis","link":"/tags/mybatis/"},{"name":"insert","slug":"insert","link":"/tags/insert/"},{"name":"字段","slug":"字段","link":"/tags/%E5%AD%97%E6%AE%B5/"},{"name":"rabbitmq","slug":"rabbitmq","link":"/tags/rabbitmq/"},{"name":"erlang","slug":"erlang","link":"/tags/erlang/"},{"name":"术语","slug":"术语","link":"/tags/%E6%9C%AF%E8%AF%AD/"},{"name":"存储路径","slug":"存储路径","link":"/tags/%E5%AD%98%E5%82%A8%E8%B7%AF%E5%BE%84/"},{"name":"保存","slug":"保存","link":"/tags/%E4%BF%9D%E5%AD%98/"},{"name":"自动","slug":"自动","link":"/tags/%E8%87%AA%E5%8A%A8/"},{"name":"格式化","slug":"格式化","link":"/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96/"},{"name":"style","slug":"style","link":"/tags/style/"},{"name":"google","slug":"google","link":"/tags/google/"},{"name":"风格","slug":"风格","link":"/tags/%E9%A3%8E%E6%A0%BC/"},{"name":"docker","slug":"docker","link":"/tags/docker/"},{"name":"centos6.6","slug":"centos6-6","link":"/tags/centos6-6/"},{"name":"emmet","slug":"emmet","link":"/tags/emmet/"},{"name":"nodepad++","slug":"nodepad","link":"/tags/nodepad/"},{"name":"keytool-maven-plugin","slug":"keytool-maven-plugin","link":"/tags/keytool-maven-plugin/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"},{"name":"oauth2.0","slug":"oauth2-0","link":"/tags/oauth2-0/"},{"name":"授权类型","slug":"授权类型","link":"/tags/%E6%8E%88%E6%9D%83%E7%B1%BB%E5%9E%8B/"},{"name":"示例","slug":"示例","link":"/tags/%E7%A4%BA%E4%BE%8B/"},{"name":"授权","slug":"授权","link":"/tags/%E6%8E%88%E6%9D%83/"},{"name":"注册","slug":"注册","link":"/tags/%E6%B3%A8%E5%86%8C/"},{"name":"register","slug":"register","link":"/tags/register/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"ubuntu","slug":"ubuntu","link":"/tags/ubuntu/"},{"name":"mac","slug":"mac","link":"/tags/mac/"},{"name":"禁止","slug":"禁止","link":"/tags/%E7%A6%81%E6%AD%A2/"},{"name":"中文","slug":"中文","link":"/tags/%E4%B8%AD%E6%96%87/"},{"name":"转码","slug":"转码","link":"/tags/%E8%BD%AC%E7%A0%81/"},{"name":"vi","slug":"vi","link":"/tags/vi/"},{"name":"按键","slug":"按键","link":"/tags/%E6%8C%89%E9%94%AE/"},{"name":"错乱","slug":"错乱","link":"/tags/%E9%94%99%E4%B9%B1/"},{"name":"修复","slug":"修复","link":"/tags/%E4%BF%AE%E5%A4%8D/"},{"name":"fcitx","slug":"fcitx","link":"/tags/fcitx/"},{"name":"自启","slug":"自启","link":"/tags/%E8%87%AA%E5%90%AF/"},{"name":"android","slug":"android","link":"/tags/android/"},{"name":"studio","slug":"studio","link":"/tags/studio/"},{"name":"启动错误","slug":"启动错误","link":"/tags/%E5%90%AF%E5%8A%A8%E9%94%99%E8%AF%AF/"},{"name":"submodule","slug":"submodule","link":"/tags/submodule/"},{"name":"服务器","slug":"服务器","link":"/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"免密","slug":"免密","link":"/tags/%E5%85%8D%E5%AF%86/"},{"name":"登录","slug":"登录","link":"/tags/%E7%99%BB%E5%BD%95/"},{"name":"push","slug":"push","link":"/tags/push/"},{"name":"免输入","slug":"免输入","link":"/tags/%E5%85%8D%E8%BE%93%E5%85%A5/"},{"name":"搜狗输入法","slug":"搜狗输入法","link":"/tags/%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95/"},{"name":"异常","slug":"异常","link":"/tags/%E5%BC%82%E5%B8%B8/"},{"name":"双系统","slug":"双系统","link":"/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"},{"name":"时间同步","slug":"时间同步","link":"/tags/%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"},{"name":"编辑器","slug":"编辑器","link":"/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"},{"name":"默认","slug":"默认","link":"/tags/%E9%BB%98%E8%AE%A4/"},{"name":"workbeach","slug":"workbeach","link":"/tags/workbeach/"},{"name":"1175","slug":"1175","link":"/tags/1175/"},{"name":"chrome","slug":"chrome","link":"/tags/chrome/"},{"name":"打开","slug":"打开","link":"/tags/%E6%89%93%E5%BC%80/"},{"name":"新标签","slug":"新标签","link":"/tags/%E6%96%B0%E6%A0%87%E7%AD%BE/"},{"name":"无法访问","slug":"无法访问","link":"/tags/%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE/"},{"name":"tag","slug":"tag","link":"/tags/tag/"},{"name":"mysqldump","slug":"mysqldump","link":"/tags/mysqldump/"},{"name":"导出","slug":"导出","link":"/tags/%E5%AF%BC%E5%87%BA/"},{"name":"表结构","slug":"表结构","link":"/tags/%E8%A1%A8%E7%BB%93%E6%9E%84/"},{"name":"表数据","slug":"表数据","link":"/tags/%E8%A1%A8%E6%95%B0%E6%8D%AE/"},{"name":"sort","slug":"sort","link":"/tags/sort/"},{"name":"uniq","slug":"uniq","link":"/tags/uniq/"},{"name":"按列","slug":"按列","link":"/tags/%E6%8C%89%E5%88%97/"},{"name":"重复","slug":"重复","link":"/tags/%E9%87%8D%E5%A4%8D/"},{"name":"发布","slug":"发布","link":"/tags/%E5%8F%91%E5%B8%83/"},{"name":"正式","slug":"正式","link":"/tags/%E6%AD%A3%E5%BC%8F/"},{"name":"bug","slug":"bug","link":"/tags/bug/"},{"name":"流程","slug":"流程","link":"/tags/%E6%B5%81%E7%A8%8B/"},{"name":"react native","slug":"react-native","link":"/tags/react-native/"},{"name":"flex","slug":"flex","link":"/tags/flex/"},{"name":"布局","slug":"布局","link":"/tags/%E5%B8%83%E5%B1%80/"},{"name":"vim","slug":"vim","link":"/tags/vim/"},{"name":"copy","slug":"copy","link":"/tags/copy/"},{"name":"outside","slug":"outside","link":"/tags/outside/"},{"name":"mount","slug":"mount","link":"/tags/mount/"},{"name":"权限","slug":"权限","link":"/tags/%E6%9D%83%E9%99%90/"},{"name":"读写","slug":"读写","link":"/tags/%E8%AF%BB%E5%86%99/"},{"name":"串口","slug":"串口","link":"/tags/%E4%B8%B2%E5%8F%A3/"},{"name":"模拟","slug":"模拟","link":"/tags/%E6%A8%A1%E6%8B%9F/"},{"name":"虚拟机","slug":"虚拟机","link":"/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"name":"模拟器","slug":"模拟器","link":"/tags/%E6%A8%A1%E6%8B%9F%E5%99%A8/"},{"name":"genynotion","slug":"genynotion","link":"/tags/genynotion/"},{"name":"vm","slug":"vm","link":"/tags/vm/"},{"name":"time","slug":"time","link":"/tags/time/"},{"name":"时间","slug":"时间","link":"/tags/%E6%97%B6%E9%97%B4/"},{"name":"openssl","slug":"openssl","link":"/tags/openssl/"},{"name":"认证","slug":"认证","link":"/tags/%E8%AE%A4%E8%AF%81/"},{"name":"单向","slug":"单向","link":"/tags/%E5%8D%95%E5%90%91/"},{"name":"双向","slug":"双向","link":"/tags/%E5%8F%8C%E5%90%91/"},{"name":"备份","slug":"备份","link":"/tags/%E5%A4%87%E4%BB%BD/"},{"name":"历史","slug":"历史","link":"/tags/%E5%8E%86%E5%8F%B2/"},{"name":"邮箱","slug":"邮箱","link":"/tags/%E9%82%AE%E7%AE%B1/"},{"name":"80","slug":"80","link":"/tags/80/"},{"name":"cookie","slug":"cookie","link":"/tags/cookie/"},{"name":"安全","slug":"安全","link":"/tags/%E5%AE%89%E5%85%A8/"}],"categories":[{"name":"操作系统","slug":"操作系统","link":"/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"博客","slug":"博客","link":"/categories/%E5%8D%9A%E5%AE%A2/"},{"name":"数据库","slug":"数据库","link":"/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"windows","slug":"操作系统/windows","link":"/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/windows/"},{"name":"jekyll","slug":"博客/jekyll","link":"/categories/%E5%8D%9A%E5%AE%A2/jekyll/"},{"name":"团队协作","slug":"团队协作","link":"/categories/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/"},{"name":"服务器","slug":"服务器","link":"/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"oracle","slug":"数据库/oracle","link":"/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/oracle/"},{"name":"持续集成","slug":"持续集成","link":"/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"},{"name":"IDE","slug":"IDE","link":"/categories/IDE/"},{"name":"浏览器","slug":"浏览器","link":"/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"name":"mysql","slug":"数据库/mysql","link":"/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/"},{"name":"虚拟机","slug":"虚拟机","link":"/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"name":"大前端","slug":"大前端","link":"/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/"},{"name":"linux","slug":"操作系统/linux","link":"/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/"},{"name":"powerdesigner","slug":"数据库/powerdesigner","link":"/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/powerdesigner/"},{"name":"transaction","slug":"数据库/transaction","link":"/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/transaction/"},{"name":"spring","slug":"spring","link":"/categories/spring/"},{"name":"svn","slug":"团队协作/svn","link":"/categories/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/svn/"},{"name":"mybatis","slug":"mybatis","link":"/categories/mybatis/"},{"name":"消息中间件","slug":"消息中间件","link":"/categories/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/"},{"name":"tomcat","slug":"服务器/tomcat","link":"/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/tomcat/"},{"name":"docker","slug":"docker","link":"/categories/docker/"},{"name":"hudson","slug":"持续集成/hudson","link":"/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/hudson/"},{"name":"emmet","slug":"emmet","link":"/categories/emmet/"},{"name":"构建","slug":"构建","link":"/categories/%E6%9E%84%E5%BB%BA/"},{"name":"eclipse","slug":"IDE/eclipse","link":"/categories/IDE/eclipse/"},{"name":"markdown","slug":"markdown","link":"/categories/markdown/"},{"name":"安全","slug":"安全","link":"/categories/%E5%AE%89%E5%85%A8/"},{"name":"ie","slug":"浏览器/ie","link":"/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/ie/"},{"name":"hexo","slug":"博客/hexo","link":"/categories/%E5%8D%9A%E5%AE%A2/hexo/"},{"name":"git","slug":"团队协作/git","link":"/categories/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C/git/"},{"name":"vmware","slug":"虚拟机/vmware","link":"/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/vmware/"},{"name":"移动开发","slug":"移动开发","link":"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"},{"name":"nodejs","slug":"大前端/nodejs","link":"/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/nodejs/"},{"name":"MySQL Workbench","slug":"数据库/MySQL-Workbench","link":"/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL-Workbench/"},{"name":"chrome","slug":"浏览器/chrome","link":"/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/chrome/"},{"name":"javascript","slug":"大前端/javascript","link":"/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/javascript/"},{"name":"aop","slug":"spring/aop","link":"/categories/spring/aop/"},{"name":"rabbitmq","slug":"消息中间件/rabbitmq","link":"/categories/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/rabbitmq/"},{"name":"maven","slug":"构建/maven","link":"/categories/%E6%9E%84%E5%BB%BA/maven/"},{"name":"oauth2.0","slug":"安全/oauth2-0","link":"/categories/%E5%AE%89%E5%85%A8/oauth2-0/"},{"name":"android","slug":"移动开发/android","link":"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/android/"},{"name":"react native","slug":"移动开发/react-native","link":"/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/react-native/"},{"name":"ssl","slug":"安全/ssl","link":"/categories/%E5%AE%89%E5%85%A8/ssl/"}]}